@using Microsoft.AspNetCore.Identity

@model IEnumerable<Unite.Models.EventDTO>
@inject UserManager<ApplicationUser> _userManager

@{
    ViewData["Title"] = "Index";
}

<h1>Nadchodzące wydarzenia</h1>

<p>
    <a asp-action="Create">Zaplanuj wydarzenie</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Location)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Scope)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Start)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.End)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Admin)
            </th>
            <th>
                Uczestnicy
            </th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Location)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Scope)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Start)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.End)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Admin.UserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NumOfParticipants) / @Html.DisplayFor(modelItem => item.Size)
            </td>
            <td>
                <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                @if (item.AdminId == new Guid(_userManager.GetUserId(User)))
                {
                    <span>
                        | <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> 
                        | <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </span>
                }
            </td>
            <td>
                @if (item.AdminId != new Guid(_userManager.GetUserId(User)))
                {
                    if (item.Participants!.Any(p => p.ParticipantId == new Guid(_userManager.GetUserId(User)) && p.State == UserEvent.UserEventState.Accepted))
                    {
                        <form asp-controller="Events" asp-action="Leave" asp-route-id="@item.Id" asp-route-returnUrl="@(Context.Request.Path+Context.Request.QueryString.Value)" method="post">
                            <button type="submit" class="btn btn-danger">
                                Opuść spotkanie
                            </button>
                        </form>
                    }
                    else if (item.Size <= item.NumOfParticipants)
                    {
                        <span>Osiągnięto limit uczestników</span>
                    }
                    else if (item.Scope == Event.EventScope.Public
                        || item.Participants!.Any(p => p.ParticipantId == new Guid(_userManager.GetUserId(User)) && p.State == UserEvent.UserEventState.Invited)
                        || (item.Scope == Event.EventScope.FriendsOnly && item.Admin.LeftSideFriendships.Any(l => l.RightSideId == new Guid(_userManager.GetUserId(User)) && l.State == Friendship.FriendshipState.Accepted)))
                    {
                        <form asp-controller="Events" asp-action="Join" asp-route-id="@item.Id" asp-route-returnUrl="@(Context.Request.Path+Context.Request.QueryString.Value)" method="post">
                            <button type="submit" class="btn btn-primary">
                                Dołącz do spotkania
                            </button>
                        </form>
                    }
                }
            </td>
        </tr>
}
    </tbody>
</table>
